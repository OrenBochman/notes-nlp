{
  "hash": "375feccc6a26310941771d0d0d27d489",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Probability and Bayes Rule\nsubtitle: Classification & Vector Spaces\ndescription: \"Concepts, code snippets, and slide commentaries for this week's lesson of the  Course notes from the deeplearning.ai natural language programming specialization.\"\ndate: 2020-10-23\ncategories: \n  - NLP \n  - Coursera \n  - code\n  - Conditional Probability\n  - Bayes rule\n  - Na√Øve Bayes\n  - Laplace smoothing\n  - Log-likelihood\n  - classification \n  - sentiment analysis task\n---\n\n\n\n\n![course banner](/images/Course-Logo-1-3.webp){#fig-00 .column-margin .nolightbox}\n\n::: {#5b0db268 .cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\nimport string \nraw_tweets=[\n  \"I am happy because I am learning NLP\",\n  \"I am sad, I am not learning NLP\",\n  \"I am happy, not sad\",\n  \"I am sad, not happy\",\n]\ndef clean(tweet:str):\n  return  tweet.translate(str.maketrans('', '', string.punctuation)).lower()\ntweets = [clean(tweet) for tweet in raw_tweets]\nlabels=['+','-','+','-']\ndf = pd.DataFrame({'tweets': tweets, 'labels': labels})\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tweets</th>\n      <th>labels</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>i am happy because i am learning nlp</td>\n      <td>+</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>i am sad i am not learning nlp</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>i am happy not sad</td>\n      <td>+</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>i am sad not happy</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#ea57cd38 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nfrom collections import Counter\np_freq,n_freq = Counter(), Counter()\n#print( df[df.labels == '+']['tweets'].to_list())\n[p_freq.update(tweet.split()) for tweet in df[df.labels == '+']['tweets'].to_list()]\n[n_freq.update(tweet.split()) for tweet in df[df.labels == '-']['tweets'].to_list()]\nprint(p_freq)\nprint(n_freq)\nvocab = list(set(p_freq.keys()).union(set(n_freq.keys())))\npos_freq = [p_freq[word] for word in vocab ]\nneg_freq = [n_freq[word] for word in vocab ]\nvocab_df=pd.DataFrame({'vocab':vocab,'pos_freq':pos_freq,'neg_freq':neg_freq})\nvocab_df['p_pos']=vocab_df.pos_freq/vocab_df.pos_freq.sum()\nvocab_df['p_neg']=vocab_df.neg_freq/vocab_df.neg_freq.sum()\nvocab_df['p_pos_sm']=(vocab_df.pos_freq+1)/(vocab_df.pos_freq.sum()+vocab_df.shape[1])\nvocab_df['p_neg_sm']=(vocab_df.neg_freq+1)/(vocab_df.neg_freq.sum()+vocab_df.shape[1])\nvocab_df['ratio']= vocab_df.p_pos_sm/vocab_df.p_neg_sm\nvocab_df['lambda']= np.log(vocab_df.p_pos_sm/vocab_df.p_neg_sm)\npd.set_option('display.float_format', '{:.2f}'.format)\nvocab_df\nprint(vocab_df.shape)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n[None, None]\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n[None, None]\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nCounter({'i': 3, 'am': 3, 'happy': 2, 'because': 1, 'learning': 1, 'nlp': 1, 'not': 1, 'sad': 1})\nCounter({'i': 3, 'am': 3, 'sad': 2, 'not': 2, 'learning': 1, 'nlp': 1, 'happy': 1})\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>vocab</th>\n      <th>pos_freq</th>\n      <th>neg_freq</th>\n      <th>p_pos</th>\n      <th>p_neg</th>\n      <th>p_pos_sm</th>\n      <th>p_neg_sm</th>\n      <th>ratio</th>\n      <th>lambda</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>not</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0.08</td>\n      <td>0.15</td>\n      <td>0.11</td>\n      <td>0.16</td>\n      <td>0.70</td>\n      <td>-0.35</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>i</td>\n      <td>3</td>\n      <td>3</td>\n      <td>0.23</td>\n      <td>0.23</td>\n      <td>0.22</td>\n      <td>0.21</td>\n      <td>1.06</td>\n      <td>0.05</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>am</td>\n      <td>3</td>\n      <td>3</td>\n      <td>0.23</td>\n      <td>0.23</td>\n      <td>0.22</td>\n      <td>0.21</td>\n      <td>1.06</td>\n      <td>0.05</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>happy</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0.15</td>\n      <td>0.08</td>\n      <td>0.17</td>\n      <td>0.11</td>\n      <td>1.58</td>\n      <td>0.46</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>learning</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.08</td>\n      <td>0.08</td>\n      <td>0.11</td>\n      <td>0.11</td>\n      <td>1.06</td>\n      <td>0.05</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>because</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.08</td>\n      <td>0.00</td>\n      <td>0.11</td>\n      <td>0.05</td>\n      <td>2.11</td>\n      <td>0.75</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>sad</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0.08</td>\n      <td>0.15</td>\n      <td>0.11</td>\n      <td>0.16</td>\n      <td>0.70</td>\n      <td>-0.35</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>nlp</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.08</td>\n      <td>0.08</td>\n      <td>0.11</td>\n      <td>0.11</td>\n      <td>1.06</td>\n      <td>0.05</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n(8, 9)\n```\n:::\n:::\n\n\n::: {#tbl-planet-measures .cell tbl-cap='Planets' execution_count=4}\n``` {.python .cell-code}\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\ntable = [[\"Sun\",696000,1989100000],\n         [\"Earth\",6371,5973.6],\n         [\"Moon\",1737,73.5],\n         [\"Mars\",3390,641.85]]\nMarkdown(tabulate(\n  table, \n  headers=[\"Planet\",\"R (km)\", \"mass (x 10^29 kg)\"]\n))\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=3}\nPlanet      R (km)    mass (x 10^29 kg)\n--------  --------  -------------------\nSun         696000           1.9891e+09\nEarth         6371        5973.6\nMoon          1737          73.5\nMars          3390         641.85\n:::\n:::\n\n\n",
    "supporting": [
      "code_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}